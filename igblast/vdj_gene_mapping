#!/usr/bin/python
import pandas as pd 
import sys


class AIRR:
	
	def __init__(self, df):
		self.df	= df
	
	def __call__(self):
		self.parse_airr_file()
	
	def parse_airr_file(self):
		df = pd.read_csv(self.df, sep='\t')
		df = df.fillna("")
		df.rename(columns={
			"v_call": "v_gene",
			"d_call": "d_gene",
			"j_call": "j_gene"
		}, inplace=True)

		total_umis = format(df.shape[0], ',')
		print(f"Total umi number: {total_umis}")

		vdj_gene = ["v_gene", "d_gene", "j_gene"]
		for gene in vdj_gene:
			gene_num = df[df[gene]!=""].shape[0]
			print(f"Total mapping to {gene} numebr: {format(gene_num, ',')}")

		chains = list(df["locus"])
		if max(set(chains),key=chains.count).startswith("TR"):
			chains = ["TRA", "TRB"]
		else:
			chains = ["IGH", "IGK", "IGL"]

		for chain in chains:
			df_chain = df[df["locus"]==chain]
			umis = format(df_chain.shape[0], ',')
			print(f"{chain} umi number: {umis}")

			for gene in vdj_gene:
				gene_num = df_chain[df_chain[gene] != ""].shape[0]
				print(f"{chain} mapping to {gene} numebr: {format(gene_num, ',')}")


if __name__ == '__main__':
	AIRR(sys.argv[1])()
