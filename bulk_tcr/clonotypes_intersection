#!/usr/bin/python
import pandas as pd
import argparse
import os 
from matplotlib_venn import venn2
from matplotlib import pyplot as plt


class Clonotypes:
    """
    calculate top200 clonotypes intersection fo two samples
    """
    def __init__(self, args):
        self.args = args
        self.sample1 = os.path.abspath(args.clonotype1_file).split('/')[-1].split('_')[0]
        self.sample2 = os.path.abspath(args.clonotype2_file).split('/')[-1].split('_')[0]

    def __call__(self, *args, **kwargs):
        self.run()

    def run(self):
        dir_name = "intersection_clonotypes"
        if not os.path.exists(dir_name):
            os.system(f"mkdir -p {dir_name}")

        df1 = pd.read_csv(self.args.clonotype1_file)
        df2 = pd.read_csv(self.args.clonotype2_file)
        df1_top200 = df1.head(200)
        df2_top200 = df2.head(200)

        # write intersection clonotypes
        df_intersection = pd.merge(df1, df2, on="aaSeqCDR3", suffixes=(self.sample1, self.sample2))
        df_intersection.to_csv(f"{dir_name}/{self.sample1}_{self.sample2}_clonotypes.csv",  index=False)
        df_intersection = pd.merge(df1_top200, df2_top200, on="aaSeqCDR3", suffixes=(self.sample1, self.sample2))
        df_intersection.to_csv(f"{dir_name}/{self.sample1}_{self.sample2}_clonotypes_top200.csv",  index=False)

        # all
        set1 = set(df1.aaSeqCDR3)
        set2 = set(df2.aaSeqCDR3)
        print(f"Clonotypes_intersection of {self.sample1} {self.sample2} : {len(set1.intersection(set2))}")
        subset_ = [set1, set2]
        venn2(subset_, set_labels=(self.sample1, self.sample2), set_colors=('r', 'g'))
        plt.savefig(f"{dir_name}/Vnplot")
        plt.clf()

        # top200
        set1 = set(df1_top200.aaSeqCDR3)
        set2 = set(df2_top200.aaSeqCDR3)
        print(f"TOP200 Clonotypes_intersection of {self.sample1} {self.sample2} : {len(set1.intersection(set2))}")
        subset_ = [set1, set2]
        venn2(subset_, set_labels=(self.sample1, self.sample2), set_colors=('r', 'g'))
        plt.savefig(f"{dir_name}/Vnplot_top200")


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="calculate clonotypes intersection of two samples")
    parser.add_argument("clonotype1_file", help="clonotype1_file")
    parser.add_argument("clonotype2_file", help="clonotype2_file")
    args = parser.parse_args()
    Clonotypes(args)()